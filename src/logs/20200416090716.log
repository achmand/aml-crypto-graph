INFO: 2020-04-16 09:07:16 
-------- START EXPERIMENT --------
INFO: 2020-04-16 09:07:16 
- PROPERTIES -
INFO: 2020-04-16 09:07:16 
{'data': 'elliptic',
 'data_config_file': 'configuration/data/data_config.yaml',
 'elliptic_args': {'encode_classes': True,
                   'feat_sets': ['AF_NE'],
                   'inc_unknown': False,
                   'train_size': 0.7},
 'evaluation_metrics': ['precision', 'recall', 'f1', 'f1_micro', 'confusion'],
 'log_path': 'logs/',
 'models': ['xg_boost'],
 'save_log': True,
 'xg_boost_args': {'persist_props': {'method': 'save',
                                     'save_path': 'persistence/experiment_1/tuned_models'},
                   'tune_props': {'k_folds': 10,
                                  'method': 'tpe',
                                  'n_iterations': 100,
                                  'param_grid': {'colsample_bytree': {'max': 1.0,
                                                                      'min': 0.9,
                                                                      'type': 'suggest_uniform'},
                                                 'gamma': {'max': 0.02,
                                                           'min': 0.0,
                                                           'step': 0.00025,
                                                           'type': 'suggest_discrete_uniform'},
                                                 'learning_rate': {'type': 'fixed',
                                                                   'value': 0.0975},
                                                 'max_delta_step': {'max': 1,
                                                                    'min': 0,
                                                                    'type': 'suggest_int'},
                                                 'max_depth': {'max': 12,
                                                               'min': 1,
                                                               'type': 'suggest_int'},
                                                 'min_child_weight': {'max': 10,
                                                                      'min': 0,
                                                                      'type': 'suggest_int'},
                                                 'n_estimators': {'type': 'fixed',
                                                                  'value': 725},
                                                 'predictor': {'type': 'throw',
                                                               'value': 'gpu_predictor'},
                                                 'reg_alpha': {'max': 1.0,
                                                               'min': 1e-08,
                                                               'type': 'suggest_loguniform'},
                                                 'reg_lambda': {'max': 1.0,
                                                                'min': 1e-08,
                                                                'type': 'suggest_loguniform'},
                                                 'subsample': {'max': 1.0,
                                                               'min': 0.9,
                                                               'type': 'suggest_uniform'},
                                                 'tree_method': {'type': 'throw',
                                                                 'value': 'gpu_hist'}},
                                  'scoring': 'neg_log_loss'}}}
INFO: 2020-04-16 09:07:16 
--- START BUILDING DATASET ---
INFO: 2020-04-16 09:07:16 
- DATASET -
INFO: 2020-04-16 09:07:16 
elliptic
INFO: 2020-04-16 09:07:16 
- CONFIG -
INFO: 2020-04-16 09:07:16 
'configuration/data/data_config.yaml'
INFO: 2020-04-16 09:07:24 
--- FINISH BUILDING DATASET ---
INFO: 2020-04-16 09:07:24 
--- START BUILDING MODELS ---
INFO: 2020-04-16 09:07:24 
- MODELS -
INFO: 2020-04-16 09:07:24 
['xg_boost']
INFO: 2020-04-16 09:07:24 
[START BUILDING MODEL 'xg_boost']
INFO: 2020-04-16 09:07:24 
- ARGUMENTS -
INFO: 2020-04-16 09:07:24 
{'persist_props': {'method': 'save',
                   'save_path': 'persistence/experiment_1/tuned_models'},
 'tune_props': {'k_folds': 10,
                'method': 'tpe',
                'n_iterations': 100,
                'param_grid': {'colsample_bytree': {'max': 1.0,
                                                    'min': 0.9,
                                                    'type': 'suggest_uniform'},
                               'gamma': {'max': 0.02,
                                         'min': 0.0,
                                         'step': 0.00025,
                                         'type': 'suggest_discrete_uniform'},
                               'learning_rate': {'type': 'fixed',
                                                 'value': 0.0975},
                               'max_delta_step': {'max': 1,
                                                  'min': 0,
                                                  'type': 'suggest_int'},
                               'max_depth': {'max': 12,
                                             'min': 1,
                                             'type': 'suggest_int'},
                               'min_child_weight': {'max': 10,
                                                    'min': 0,
                                                    'type': 'suggest_int'},
                               'n_estimators': {'type': 'fixed', 'value': 725},
                               'predictor': {'type': 'throw',
                                             'value': 'gpu_predictor'},
                               'reg_alpha': {'max': 1.0,
                                             'min': 1e-08,
                                             'type': 'suggest_loguniform'},
                               'reg_lambda': {'max': 1.0,
                                              'min': 1e-08,
                                              'type': 'suggest_loguniform'},
                               'subsample': {'max': 1.0,
                                             'min': 0.9,
                                             'type': 'suggest_uniform'},
                               'tree_method': {'type': 'throw',
                                               'value': 'gpu_hist'}},
                'scoring': 'neg_log_loss'}}
INFO: 2020-04-16 09:07:24 
----> [START BUILDING 'xg_boost' MODEL FOR 'AF_NE' FEATURE SET]
INFO: 2020-04-16 09:07:24 
----> [FINISH BUILDING 'xg_boost' MODEL FOR 'AF_NE' FEATURE SET]
INFO: 2020-04-16 09:07:24 
[FINISH BUILDING MODEL 'xg_boost']
INFO: 2020-04-16 09:07:24 
--- FINISH BUILDING MODELS ---
INFO: 2020-04-16 09:07:24 
--- START TRAINING ---
INFO: 2020-04-16 09:07:24 
[START TRAINING MODEL 'xg_boost']
INFO: 2020-04-16 09:07:24 
----> [START TRAINING 'xg_boost' MODEL FOR 'AF_NE' FEATURE SET]
ERROR: 2020-04-16 09:23:20 
(<class 'joblib.externals.loky.process_executor.TerminatedWorkerError'>, TerminatedWorkerError('A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker. The exit codes of the workers are {SIGABRT(-6)}'), <traceback object at 0x7fa4c64b07d0>)
Traceback (most recent call last):
  File "experiment.py", line 204, in <module>
    train_models(dataset, models)
  File "experiment.py", line 135, in train_models
    model.fit(X, y)
  File "/home/dvassallo/repos/aml-crypto-graph/src/cryptoaml/models/_models.py", line 115, in fit
    self._tuner, self._tune_props = tu.tune_model(self._model, X, y, self._tune_props)
  File "/home/dvassallo/repos/aml-crypto-graph/src/cryptoaml/tune/_tuning.py", line 535, in tune_model
    tuner.fit(X, y)
  File "/home/dvassallo/repos/aml-crypto-graph/src/cryptoaml/tune/_tuning.py", line 240, in fit
    self._study.optimize(self._objective, n_trials=self._n_iterations)
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/optuna/study.py", line 331, in optimize
    func, n_trials, timeout, catch, callbacks, gc_after_trial, None
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/optuna/study.py", line 626, in _optimize_sequential
    self._run_trial_and_callbacks(func, catch, callbacks, gc_after_trial)
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/optuna/study.py", line 656, in _run_trial_and_callbacks
    trial = self._run_trial(func, catch, gc_after_trial)
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/optuna/study.py", line 677, in _run_trial
    result = func(trial)
  File "/home/dvassallo/repos/aml-crypto-graph/src/cryptoaml/tune/_tuning.py", line 219, in _objective
    cv=StratifiedKFold(n_splits=self._k_folds))
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/sklearn/model_selection/_validation.py", line 390, in cross_val_score
    error_score=error_score)
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/sklearn/model_selection/_validation.py", line 236, in cross_validate
    for train, test in cv.split(X, y, groups))
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/joblib/parallel.py", line 1017, in __call__
    self.retrieve()
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/joblib/parallel.py", line 909, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/site-packages/joblib/_parallel_backends.py", line 562, in wrap_future_result
    return future.result(timeout=timeout)
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/concurrent/futures/_base.py", line 435, in result
    return self.__get_result()
  File "/home/dvassallo/anaconda3/envs/btc_classifier/lib/python3.7/concurrent/futures/_base.py", line 384, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.TerminatedWorkerError: A worker process managed by the executor was unexpectedly terminated. This could be caused by a segmentation fault while calling the function or by an excessive memory usage causing the Operating System to kill the worker. The exit codes of the workers are {SIGABRT(-6)}
